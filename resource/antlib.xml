<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--ant-->
<!--
	This file is part of the DITA-OT Splash Screen Plug-in project.
	See the accompanying LICENSE file for applicable licenses.
-->
<antlib xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!--

		Entry point to the JavaScript tidier function which 
		removes HTML anchor tags and adds ids to headers

			@param file	- The Swagger Markdown file to clean up
		
	-->
	<taskdef classname="fox.jason.passthrough.tasks.FormatMarkdownTask" name="format-swagger-markdown">
		<classpath>
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
	</taskdef>

	<!--
		Individual file processing for swagger.
		Take an input format run swagger against it and convert to DITA

		@param src - The input file to convert to DITA
		@param dest - The output file location
		@param title - The title of the converted file
		@param metadata - The metadata of the converted file
	-->
	<macrodef name="add-swagger-file">
		<attribute name="src" />
		<attribute name="dest" />
		<attribute name="title" />
		<sequential>
			<echo if:set="swagger.installed" taskname="swagger" level="info" message="Processing @{src}"/>

			<local name="swagger.temp.file"/>
			<local name="swagger.result"/>
			<local name="swagger.output"/>
			<local name="swagger.error"/>
			<local name="swagger.isError"/>

			<java taskname="swagger-gen" outputproperty="swagger.output" resultproperty="swagger.result"  errorproperty="swagger.error" jar="${basedir}/lib/swagger2markup-cli-2.0.0.jar"
				fork="true" failonerror="false" maxmemory="128m">
			  
				<arg value="convert"/>
				<arg value="-i"/>
				<arg value="@{src}"/>
				<arg value="-f"/>
				<arg value="@{dest}"/>
				<arg value="-c"/>
				<arg value="${basedir}/cfg/config.properties"/>
			</java>

			<condition property="swagger.isError">
		      	<not>
		          	<equals arg1="${swagger.result}" arg2="0"/>
		        </not>
		    </condition>

			<echo taskname="swagger-gen" if:set="swagger.isError" level="error" message="${swagger.error}"/>
			<fail if:set="swagger.isError" id="SWAG001F" message="SwaggerGen failed to generate documentation:&#xD;&#xD; @{src}"/>

			<format-swagger-markdown file="@{dest}.md"/>
			<move file="@{dest}.md" tofile="@{dest}"/>
		</sequential>
	</macrodef>

</antlib>